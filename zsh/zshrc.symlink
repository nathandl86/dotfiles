# print working directory when terminal is opened
pwd

# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=$HOME/projects

# Stash your environment variables in /.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a $HOME/.localrc ]]
then
  source $HOME/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# Setup for newer Apple silicon macs and back support for x86 intel macs
if [ "$(sysctl -n sysctl.proc_translated)" = "1" ]; then
    # X86
    echo "X86_64 (Rosetta) Terminal"
    export BREW_PATH="/usr/local/homebrew"

    # x86 Brew
    export LDFLAGS="-L/usr/local/homebrew/opt/openssl@1.1/lib -L/usr/local/homebrew/opt/libffi/lib -L/usr/local/homebrew/opt/zlib/lib -L/usr/local/homebrew/opt/mysql-client/lib -L/usr/local/homebrew/opt/bzip2/lib -L/usr/local/homebrew/opt/readline/lib"
    export CFLAGS="-I/usr/local/homebrew/opt/openssl@1.1/include -I/usr/local/homebrew/opt/libffi/include -I/usr/local/homebrew/opt/zlib/include -I/usr/local/homebrew/opt/mysql-client/include -I/usr/local/homebrew/opt/bzip2/include -I/usr/local/homebrew/opt/readline/include"
    export CPPFLAGS="-I/usr/local/homebrew/opt/openssl@1.1/include -I/usr/local/homebrew/opt/libffi/include -I/usr/local/homebrew/opt/zlib/include -I/usr/local/homebrew/opt/mysql-client/include -I/usr/local/homebrew/opt/bzip2/include -I/usr/local/homebrew/opt/readline/include"
    export PKG_CONFIG_PATH="/usr/local/homebrew/opt/mysql-client/lib/pkgconfig"

    # export CRYPTOGRAPHY_SUPPRESS_LINK_FLAGS="1"
    # export MYSQLCLIENT_CFLAGS="pkg-config mysqlclient --cflags"
    # export MYSQLCLIENT_LDFLAGS="pkg-config mysqlclient --libs"
else
    # ARM64
    echo "ARM64 Terminal"
    export BREW_PATH="/opt/homebrew"

    # Homebrew - setup PATH
    export PATH=/opt/homebrew/bin:$PATH
    export PATH=/opt/homebrew/sbin:$PATH

    # setup zsh-completion
    if type brew &>/dev/null; then
        FPATH=/opt/homebrew/share/zsh/site-functions:$FPATH
    fi
    fpath=(/opt/homebrew/share/zsh-completions $fpath)
fi

eval "$(${BREW_PATH}/bin/brew shellenv)"

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

export PATH="/Users/nathanlowry/perl5/bin${PATH:+:${PATH}}";
PERL5LIB="/Users/nathanlowry/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/Users/nathanlowry/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/Users/nathanlowry/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/nathanlowry/perl5"; export PERL_MM_OPT;

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# include dev-scripts
export PATH=$HOME/projects/personal/dev-scripts/bin:$PATH
if [ -f $HOME/projects/personal/dev-scripts/bin/private-aliases ]; then
    source $HOME/projects/personal/dev-scripts/bin/private-aliases
fi

if [ -f $HOME/projects/personal/dev-scripts/bin/private-settings ]; then
    source $HOME/projects/personal/dev-scripts/bin/private-settings
fi

# Required in OSX High Sierra and newer
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

export PATH=$HOME/bin:$PATH:$M2_HOME/bin
